buildscript {
    ext {
        springBootVersion = '1.5.15.RELEASE'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'

description 'accp-initializer'
group = 'accp'
version = '1.0'
sourceCompatibility = 1.8

repositories {
    jcenter()
}

ext {
    lombokVersion = '1.18.2'
    springfoxSwaggerVersion = '2.9.2'
    guavaVersion = '20.0'
    commonsLang3Version = '3.7'
    commonsIOVersion = '2.6'
}

sourceSets {
    integrationTest {
        resources {
            srcDirs 'src/integrationTest/resources'
        }
        java {
            compileClasspath += main.compileClasspath + main.output
            runtimeClasspath += main.runtimeClasspath
            srcDirs 'src/integrationTest/java'
        }
    }
}

dependencies {
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile "com.google.guava:guava:$guavaVersion"
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    compile "org.apache.commons:commons-lang3:$commonsLang3Version"
    compile "commons-io:commons-io:$commonsIOVersion"
    compile 'org.springframework.boot:spring-boot-starter-mustache'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile "io.springfox:springfox-swagger2:$springfoxSwaggerVersion"
    compile "io.springfox:springfox-swagger-ui:$springfoxSwaggerVersion"
    compile 'com.google.jimfs:jimfs:1.1'
    testCompile 'org.springframework.boot:springboot-starter-test'
    testCompile 'com.jayway.jsonpath:json-path'
    testCompile 'com.jayway.jsonpath:json-path-assert'
    integrationTestCompile 'org.springframework.boot:spring-boot-starter-test'
}

jar {
    manifest {
        attributes 'Implementation-Title': project.description,
                'Implementation-Version': project.version
    }
}

jacoco {
    toolVersion "0.8.1"
}

jacocoTestReport {
    reports {
        csv.enabled = false
        xml.enabled = false
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = "BUNDLE"

            limit {
                counter = "INSTRUCTION"
                minimum = 0.35
            }

            limit {
                counter = "BRANCH"
                minimum = 0.03
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification

task integrationTest (type: Test) {
    group 'verification'
    description 'Runs the integration tests'

    classpath = sourceSets.integrationTest.runtimeClasspath
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
}
integrationTest.dependsOn compileIntegrationTestJava

task jacocoIntegrationTestReport (type: JacocoReport, dependsOn: integrationTest) {
    group = "verification"
    description = "Generate Jacoco coverage reports after running integration tests."

    executionData integrationTest
    sourceDirectories = files(sourceSets.main.java.srcDirs)
    classDirectories = files(sourceSets.main.output.classesDirs)

    reports {
        xml.enabled = false
        csv.enabled = false
        html.destination file("${buildDir}/reports/jacoco/integrationTest/html")
    }
}

task jacocoIntegrationTestCoverageVerification (type: JacocoCoverageVerification, dependsOn: integrationTest) {
    group = "verification"
    description = "Verifies code coverage on the integration tests."

    executionData integrationTest
    sourceDirectories = files(sourceSets.main.java.srcDirs)
    classDirectories = files(sourceSets.main.output.classesDir)

    violationRules {
        rule {
            element = "BUNDLE"

            limit {
                counter = "INSTRUCTION"
                minimum = 0.07
            }

            limit {
                counter = "BRANCH"
                minimum = 0.07
            }
        }
    }
}
check.dependsOn jacocoIntegrationTestCoverageVerification